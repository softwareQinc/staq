version: 2.1

# CircleCI doesn't handle large file sets properly for local builds
# https://github.com/CircleCI-Public/circleci-cli/issues/281#issuecomment-472808051
localCheckout: &localCheckout
  run: |-
    PROJECT_PATH=$(cd ${CIRCLE_WORKING_DIRECTORY}; pwd)
    mkdir -p ${PROJECT_PATH}
    cd /tmp/_circleci_local_build_repo
    git ls-files -z | xargs -0 -s 2090860 tar -c | tar -x -C ${PROJECT_PATH}
    cp -a /tmp/_circleci_local_build_repo/.git ${PROJECT_PATH}

jobs:
  ubuntu_bionic:
    description: A template for building and testing staq on Ubuntu Linux
    machine:
      image: ubuntu-2004:202010-01
    steps:
      - checkout # change this from "checkout" to "*localCheckout" when running CircleCI locally
      - run:
          name: Clone submodules
          command: |
            git submodule update --init --recursive
      - run:
          name: Build the staq toolkit
          command: |
            cmake -B build -DCMAKE_BUILD_TYPE=Debug
            cmake --build build --parallel 4
      - run:
          name: Build the unit tests
          command: |
            cmake --build build --target unit_tests --parallel 4
      - run:
          name: Run the unit tests
          command: |
            ctest --test-dir build

  macOS:
    description: A template for building and testing staq on macOS
    macos:
      xcode: "13.0"
    steps:
      - checkout # change this from "checkout" to "*localCheckout" when running CircleCI locally
      - run:
          name: Clone submodules
          command: |
            git submodule update --init --recursive
      - run:
          name: Build the staq toolkit
          command: |
            cmake -B build -DCMAKE_BUILD_TYPE=Debug
            cmake --build build --parallel 4
      - run:
          name: Build the unit tests
          command: |
            cmake --build build --target unit_tests --parallel 4
      - run:
          name: Run the unit tests
          command: |
            ctest --test-dir build

workflows:
  build:
    jobs:
      - ubuntu_bionic:
          name: ubuntu-bionic
#      - macOS:
#          name: macOS-base
